@startuml

title ACL

== ACL on LIST endpoints ==
autonumber 1

actor AdminUser
AdminUser  -> "NestJS Guard": GET /admins/prefectures
note over "NestJS Guard" 
Expects JWT Payload:
- isAdminUser 
- userAdminRole 
- userAccessKey
end note

"NestJS Guard" -> "Service":  Pass userAccessKey to prefecture service
note left "Service" 
Example value: 
- userAccessKey: SUPER_ADMIN_KEY
end note

"Service" -> "Firestore": Fetch all accessible documents \n in prefectures collection
note over "Firestore" 
.where(
  accessControlList, 
  array-contains, 
  userAccessKey
)
end note

"Firestore" -> "Service": Return array of prefectures

"Service" -> "AdminUser": prefectures LIST based on ACL


== ACL on GET by ID endpoints ==
autonumber 1

AdminUser  -> "NestJS Guard": GET /admins/prefectures/ABC
note over "NestJS Guard" 
Expects JWT Payload:
- isAdminUser 
- userAdminRole 
- userAccessKey
end note

"NestJS Guard" -> "Service":  Pass userAccessKey to prefecture service
note left "Service" 
Example value: 
- userAccessKey: SUPER_ADMIN_KEY
end note

"Service" -> "Firestore": Fetch single document \n based on ID ABC

"Firestore" -> "Service": Return ABC prefecture
note over "Service" 
canUserAccessResource(
  userAccessKey, 
  prefecture
)
end note

"Service" -> "AdminUser": prefectures GET by ID based on ACL

@enduml
